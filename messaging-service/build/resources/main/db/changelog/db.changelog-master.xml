<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
                      http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-4.24.xsd">

    <!-- Create the updated_at trigger function first -->
    <changeSet id="1" author="celebrating" runOnChange="true" failOnError="false">
        <preConditions onFail="MARK_RAN">
            <sqlCheck expectedResult="0">
                SELECT COUNT(*) FROM pg_proc WHERE proname = 'update_updated_at_column'
            </sqlCheck>
        </preConditions>
        <sql splitStatements="false">
            CREATE OR REPLACE FUNCTION update_updated_at_column()
            RETURNS TRIGGER AS $$ 
            BEGIN
                NEW.updated_at = CURRENT_TIMESTAMP;
                RETURN NEW;
            END;
            $$ LANGUAGE plpgsql;
        </sql>
        <rollback>
            DROP FUNCTION IF EXISTS update_updated_at_column();
        </rollback>
    </changeSet>

    <include file="db/changelog/changes/001-create-chats-table.xml"/>

    <changeSet id="2" author="celebrating" runOnChange="true" failOnError="false">
        <preConditions onFail="MARK_RAN">
            <not>
                <tableExists tableName="messages"/>
            </not>
        </preConditions>
        <createTable tableName="messages">
            <column name="id" type="bigint" autoIncrement="true">
                <constraints primaryKey="true" nullable="false"/>
            </column>
            <column name="chat_id" type="bigint">
                <constraints nullable="false" foreignKeyName="fk_messages_chat_id" references="chats(id)"/>
            </column>
            <column name="sender_id" type="bigint">
                <constraints nullable="false"/>
            </column>
            <column name="receiver_id" type="bigint">
                <constraints nullable="false"/>
            </column>
            <column name="content" type="text">
                <constraints nullable="false"/>
            </column>
            <column name="read" type="boolean" defaultValueBoolean="false">
                <constraints nullable="false"/>
            </column>
            <column name="created_at" type="timestamp" defaultValueComputed="CURRENT_TIMESTAMP">
                <constraints nullable="false"/>
            </column>
            <column name="updated_at" type="timestamp" defaultValueComputed="CURRENT_TIMESTAMP">
                <constraints nullable="false"/>
            </column>
            <column name="media_url" type="varchar(255)"/>
        </createTable>
        
        <createIndex tableName="messages" indexName="idx_messages_chat_id">
            <column name="chat_id"/>
        </createIndex>
        
        <createIndex tableName="messages" indexName="idx_messages_sender_id">
            <column name="sender_id"/>
        </createIndex>
        
        <createIndex tableName="messages" indexName="idx_messages_receiver_id">
            <column name="receiver_id"/>
        </createIndex>
    </changeSet>

    <changeSet id="3" author="celebrating" runOnChange="true" failOnError="false">
        <preConditions onFail="MARK_RAN">
            <sqlCheck expectedResult="0">
                SELECT COUNT(*) FROM pg_trigger WHERE tgname = 'update_messages_updated_at'
            </sqlCheck>
        </preConditions>
        <sql splitStatements="false">
            DROP TRIGGER IF EXISTS update_messages_updated_at ON messages;

            CREATE TRIGGER update_messages_updated_at
            BEFORE UPDATE ON messages
            FOR EACH ROW
            EXECUTE FUNCTION update_updated_at_column();
        </sql>
        <rollback>
            DROP TRIGGER IF EXISTS update_messages_updated_at ON messages;
        </rollback>
    </changeSet>

</databaseChangeLog> 
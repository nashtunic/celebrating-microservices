spring:
  application:
    name: analytics-logging-service
  config:
    import: "optional:configserver:http://197.254.53.252:8888/"
  datasource:
    url: jdbc:postgresql://197.254.53.252:5432/celebratedb
    username: celebrate
    password: celebrate123
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  data:
    mongodb:
      host: 197.254.53.252
      port: 27017
      database: celebrate_analytics
      username: celebrate_user
      password: celebrate_password
      authentication-database: celebrate_analytics
  cache:
    type: caffeine
    caffeine:
      spec: maximumSize=1000,expireAfterWrite=1h
  kafka:
    bootstrap-servers: 197.254.53.252:9092
    consumer:
      group-id: analytics-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

server:
  port: 8088

eureka:
  client:
    serviceUrl:
      defaultZone: http://197.254.53.252:8761/eureka/
    fetch-registry: true
    register-with-eureka: true
  instance:
    prefer-ip-address: true
    hostname: 197.254.53.252
    lease-renewal-interval-in-seconds: 30
    lease-expiration-duration-in-seconds: 90

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always

logging:
  level:
    com.celebrate.analytics: DEBUG
    org.springframework.data.mongodb: INFO
    org.springframework.kafka: INFO 